on: [push]
jobs:
  json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          cat <<EOF > package.json
          {
            "version": "1.0.0"
          }
          EOF
      - id: test
        uses: ./
        with:
          file: ./package.json
          query: .version
      - run: |
          echo ${{ steps.test.outputs.file-version }}

  toml:
    runs-on: ubuntu-latest
    env:
      TAG_VERSION_MATCH_TEST_INPUT: v1.0.0
    steps:
      - uses: actions/checkout@v3
      - run: |
          cat <<EOF > Cargo.toml
          [package]
          version = "1.0.0"
          EOF
      - id: test
        uses: ./
        with:
          file: ./Cargo.toml
          query: .package.version
      - run: |
          echo ${{ steps.test.outputs.file-version }}

  pattern:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case:
          - tag: v1.0.0
            pattern: '^v([0-9]\.[0-9]\.[0-9])$'
            nth-group: '1'
          - tag: v1.0.0-beta
            pattern: '^v([0-9]\.[0-9]\.[0-9])(-beta)?$'
            nth-group: '1'
          - tag: 1.0.0
            pattern: '[0-9]\.[0-9]\.[0-9]'
            nth-group: '0'
    steps:
      - uses: actions/checkout@v3
      - run: |
          cat <<EOF > package.json
          {
            "version": "1.0.0"
          }
          EOF
      - id: test
        uses: ./
        env:
          TAG_VERSION_MATCH_TEST_INPUT: ${{ matrix.test-case.tag }}
        with:
          file: ./package.json
          query: .version
          pattern: '${{ matrix.test-case.pattern }}'
          nth-group: '${{ matrix.test-case.nth-group }}'
      - run: |
          [[ ${{ steps.test.outputs.file-version }} == ${{ steps.test.outputs.tag-version }} ]]
